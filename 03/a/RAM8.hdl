// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address, a=ldA, b=ldB, c=ldC, d=ldD, e=ldE, f=ldF, g=ldG, h=ldH);

    Register(in=in, load=ldA, out=reg0);
    Register(in=in, load=ldB, out=reg1);
    Register(in=in, load=ldC, out=reg2);
    Register(in=in, load=ldD, out=reg3);
    Register(in=in, load=ldE, out=reg4);
    Register(in=in, load=ldF, out=reg5);
    Register(in=in, load=ldG, out=reg6);
    Register(in=in, load=ldH, out=reg7);

    Mux8Way16 (
        a=reg0, b=reg1, 
        c=reg2, d=reg3,
        e=reg4, f=reg5,
        g=reg6, h=reg7,
        sel=address, 
        out=out
    );
}